/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.3
 * source: job_application.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace job_application_service {
    export class CreateJobApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): CreateJobApplicationRequest {
            const message = new CreateJobApplicationRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateJobApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateJobApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateJobApplicationRequest {
            return CreateJobApplicationRequest.deserialize(bytes);
        }
    }
    export class CreateJobApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): CreateJobApplicationResponse {
            const message = new CreateJobApplicationResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateJobApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateJobApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateJobApplicationResponse {
            return CreateJobApplicationResponse.deserialize(bytes);
        }
    }
    export class ReadJobApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): ReadJobApplicationRequest {
            const message = new ReadJobApplicationRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadJobApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReadJobApplicationRequest {
            return ReadJobApplicationRequest.deserialize(bytes);
        }
    }
    export class ReadJobApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): ReadJobApplicationResponse {
            const message = new ReadJobApplicationResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadJobApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ReadJobApplicationResponse {
            return ReadJobApplicationResponse.deserialize(bytes);
        }
    }
    export class UpdateJobApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): UpdateJobApplicationRequest {
            const message = new UpdateJobApplicationRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateJobApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateJobApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UpdateJobApplicationRequest {
            return UpdateJobApplicationRequest.deserialize(bytes);
        }
    }
    export class UpdateJobApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): UpdateJobApplicationResponse {
            const message = new UpdateJobApplicationResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateJobApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateJobApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UpdateJobApplicationResponse {
            return UpdateJobApplicationResponse.deserialize(bytes);
        }
    }
    export class DeleteJobApplicationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): DeleteJobApplicationRequest {
            const message = new DeleteJobApplicationRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteJobApplicationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteJobApplicationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteJobApplicationRequest {
            return DeleteJobApplicationRequest.deserialize(bytes);
        }
    }
    export class DeleteJobApplicationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): DeleteJobApplicationResponse {
            const message = new DeleteJobApplicationResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteJobApplicationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteJobApplicationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteJobApplicationResponse {
            return DeleteJobApplicationResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedJobApplicationServiceService {
        static definition = {
            CreateJobApplication: {
                path: "/job_application_service.JobApplicationService/CreateJobApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateJobApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateJobApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: CreateJobApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => CreateJobApplicationResponse.deserialize(new Uint8Array(bytes))
            },
            ReadJobApplication: {
                path: "/job_application_service.JobApplicationService/ReadJobApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: ReadJobApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => ReadJobApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: ReadJobApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => ReadJobApplicationResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateJobApplication: {
                path: "/job_application_service.JobApplicationService/UpdateJobApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: UpdateJobApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => UpdateJobApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: UpdateJobApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => UpdateJobApplicationResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteJobApplication: {
                path: "/job_application_service.JobApplicationService/DeleteJobApplication",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: DeleteJobApplicationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => DeleteJobApplicationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: DeleteJobApplicationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => DeleteJobApplicationResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract CreateJobApplication(call: grpc_1.ServerUnaryCall<CreateJobApplicationRequest, CreateJobApplicationResponse>, callback: grpc_1.sendUnaryData<CreateJobApplicationResponse>): void;
        abstract ReadJobApplication(call: grpc_1.ServerUnaryCall<ReadJobApplicationRequest, ReadJobApplicationResponse>, callback: grpc_1.sendUnaryData<ReadJobApplicationResponse>): void;
        abstract UpdateJobApplication(call: grpc_1.ServerUnaryCall<UpdateJobApplicationRequest, UpdateJobApplicationResponse>, callback: grpc_1.sendUnaryData<UpdateJobApplicationResponse>): void;
        abstract DeleteJobApplication(call: grpc_1.ServerUnaryCall<DeleteJobApplicationRequest, DeleteJobApplicationResponse>, callback: grpc_1.sendUnaryData<DeleteJobApplicationResponse>): void;
    }
    export class JobApplicationServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedJobApplicationServiceService.definition, "JobApplicationService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        CreateJobApplication: GrpcUnaryServiceInterface<CreateJobApplicationRequest, CreateJobApplicationResponse> = (message: CreateJobApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<CreateJobApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<CreateJobApplicationResponse>, callback?: grpc_1.requestCallback<CreateJobApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateJobApplication(message, metadata, options, callback);
        };
        ReadJobApplication: GrpcUnaryServiceInterface<ReadJobApplicationRequest, ReadJobApplicationResponse> = (message: ReadJobApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<ReadJobApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<ReadJobApplicationResponse>, callback?: grpc_1.requestCallback<ReadJobApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.ReadJobApplication(message, metadata, options, callback);
        };
        UpdateJobApplication: GrpcUnaryServiceInterface<UpdateJobApplicationRequest, UpdateJobApplicationResponse> = (message: UpdateJobApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<UpdateJobApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<UpdateJobApplicationResponse>, callback?: grpc_1.requestCallback<UpdateJobApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateJobApplication(message, metadata, options, callback);
        };
        DeleteJobApplication: GrpcUnaryServiceInterface<DeleteJobApplicationRequest, DeleteJobApplicationResponse> = (message: DeleteJobApplicationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<DeleteJobApplicationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<DeleteJobApplicationResponse>, callback?: grpc_1.requestCallback<DeleteJobApplicationResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteJobApplication(message, metadata, options, callback);
        };
    }
}
