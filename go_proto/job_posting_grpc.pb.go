// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.27.3
// source: job_posting.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	JobPostingService_CreateJobPosting_FullMethodName = "/job_posting_service.JobPostingService/CreateJobPosting"
	JobPostingService_ReadJobPosting_FullMethodName   = "/job_posting_service.JobPostingService/ReadJobPosting"
	JobPostingService_UpdateJobPosting_FullMethodName = "/job_posting_service.JobPostingService/UpdateJobPosting"
	JobPostingService_DeleteJobPosting_FullMethodName = "/job_posting_service.JobPostingService/DeleteJobPosting"
)

// JobPostingServiceClient is the client API for JobPostingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobPostingServiceClient interface {
	CreateJobPosting(ctx context.Context, in *CreateJobPostingRequest, opts ...grpc.CallOption) (*CreateJobPostingResponse, error)
	ReadJobPosting(ctx context.Context, in *ReadJobPostingRequest, opts ...grpc.CallOption) (*ReadJobPostingResponse, error)
	UpdateJobPosting(ctx context.Context, in *UpdateJobPostingRequest, opts ...grpc.CallOption) (*UpdateJobPostingResponse, error)
	DeleteJobPosting(ctx context.Context, in *DeleteJobPostingRequest, opts ...grpc.CallOption) (*DeleteJobPostingResponse, error)
}

type jobPostingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobPostingServiceClient(cc grpc.ClientConnInterface) JobPostingServiceClient {
	return &jobPostingServiceClient{cc}
}

func (c *jobPostingServiceClient) CreateJobPosting(ctx context.Context, in *CreateJobPostingRequest, opts ...grpc.CallOption) (*CreateJobPostingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateJobPostingResponse)
	err := c.cc.Invoke(ctx, JobPostingService_CreateJobPosting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobPostingServiceClient) ReadJobPosting(ctx context.Context, in *ReadJobPostingRequest, opts ...grpc.CallOption) (*ReadJobPostingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ReadJobPostingResponse)
	err := c.cc.Invoke(ctx, JobPostingService_ReadJobPosting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobPostingServiceClient) UpdateJobPosting(ctx context.Context, in *UpdateJobPostingRequest, opts ...grpc.CallOption) (*UpdateJobPostingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateJobPostingResponse)
	err := c.cc.Invoke(ctx, JobPostingService_UpdateJobPosting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobPostingServiceClient) DeleteJobPosting(ctx context.Context, in *DeleteJobPostingRequest, opts ...grpc.CallOption) (*DeleteJobPostingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteJobPostingResponse)
	err := c.cc.Invoke(ctx, JobPostingService_DeleteJobPosting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobPostingServiceServer is the server API for JobPostingService service.
// All implementations must embed UnimplementedJobPostingServiceServer
// for forward compatibility.
type JobPostingServiceServer interface {
	CreateJobPosting(context.Context, *CreateJobPostingRequest) (*CreateJobPostingResponse, error)
	ReadJobPosting(context.Context, *ReadJobPostingRequest) (*ReadJobPostingResponse, error)
	UpdateJobPosting(context.Context, *UpdateJobPostingRequest) (*UpdateJobPostingResponse, error)
	DeleteJobPosting(context.Context, *DeleteJobPostingRequest) (*DeleteJobPostingResponse, error)
	mustEmbedUnimplementedJobPostingServiceServer()
}

// UnimplementedJobPostingServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedJobPostingServiceServer struct{}

func (UnimplementedJobPostingServiceServer) CreateJobPosting(context.Context, *CreateJobPostingRequest) (*CreateJobPostingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobPosting not implemented")
}
func (UnimplementedJobPostingServiceServer) ReadJobPosting(context.Context, *ReadJobPostingRequest) (*ReadJobPostingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadJobPosting not implemented")
}
func (UnimplementedJobPostingServiceServer) UpdateJobPosting(context.Context, *UpdateJobPostingRequest) (*UpdateJobPostingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobPosting not implemented")
}
func (UnimplementedJobPostingServiceServer) DeleteJobPosting(context.Context, *DeleteJobPostingRequest) (*DeleteJobPostingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJobPosting not implemented")
}
func (UnimplementedJobPostingServiceServer) mustEmbedUnimplementedJobPostingServiceServer() {}
func (UnimplementedJobPostingServiceServer) testEmbeddedByValue()                           {}

// UnsafeJobPostingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobPostingServiceServer will
// result in compilation errors.
type UnsafeJobPostingServiceServer interface {
	mustEmbedUnimplementedJobPostingServiceServer()
}

func RegisterJobPostingServiceServer(s grpc.ServiceRegistrar, srv JobPostingServiceServer) {
	// If the following call pancis, it indicates UnimplementedJobPostingServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&JobPostingService_ServiceDesc, srv)
}

func _JobPostingService_CreateJobPosting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobPostingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobPostingServiceServer).CreateJobPosting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobPostingService_CreateJobPosting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobPostingServiceServer).CreateJobPosting(ctx, req.(*CreateJobPostingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobPostingService_ReadJobPosting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadJobPostingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobPostingServiceServer).ReadJobPosting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobPostingService_ReadJobPosting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobPostingServiceServer).ReadJobPosting(ctx, req.(*ReadJobPostingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobPostingService_UpdateJobPosting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobPostingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobPostingServiceServer).UpdateJobPosting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobPostingService_UpdateJobPosting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobPostingServiceServer).UpdateJobPosting(ctx, req.(*UpdateJobPostingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobPostingService_DeleteJobPosting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJobPostingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobPostingServiceServer).DeleteJobPosting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobPostingService_DeleteJobPosting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobPostingServiceServer).DeleteJobPosting(ctx, req.(*DeleteJobPostingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobPostingService_ServiceDesc is the grpc.ServiceDesc for JobPostingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobPostingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "job_posting_service.JobPostingService",
	HandlerType: (*JobPostingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJobPosting",
			Handler:    _JobPostingService_CreateJobPosting_Handler,
		},
		{
			MethodName: "ReadJobPosting",
			Handler:    _JobPostingService_ReadJobPosting_Handler,
		},
		{
			MethodName: "UpdateJobPosting",
			Handler:    _JobPostingService_UpdateJobPosting_Handler,
		},
		{
			MethodName: "DeleteJobPosting",
			Handler:    _JobPostingService_DeleteJobPosting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job_posting.proto",
}
