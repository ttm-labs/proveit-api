"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.job_interview_analysis_service = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.3
 * source: job_interview_analysis.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = __importStar(require("./google/protobuf/timestamp"));
const pb_1 = __importStar(require("google-protobuf"));
const grpc_1 = __importStar(require("@grpc/grpc-js"));
var job_interview_analysis_service;
(function (job_interview_analysis_service) {
    var _CreateJobInterviewAnalysisRequest_one_of_decls, _CreateJobInterviewAnalysisResponse_one_of_decls, _ReadJobInterviewAnalysisRequest_one_of_decls, _ReadJobInterviewAnalysisResponse_one_of_decls, _UpdateJobInterviewAnalysisRequest_one_of_decls, _UpdateJobInterviewAnalysisResponse_one_of_decls, _DeleteJobInterviewAnalysisRequest_one_of_decls, _DeleteJobInterviewAnalysisResponse_one_of_decls, _GetAnalysesForInterviewsRequest_one_of_decls, _GetAnalysesForInterviewsResponse_one_of_decls, _CreateAnalysesForInterviewsRequest_one_of_decls, _CreateAnalysesForInterviewsResponse_one_of_decls, _AnalysisForInterview_one_of_decls, _Analysis_one_of_decls;
    class CreateJobInterviewAnalysisRequest extends pb_1.Message {
        constructor(data) {
            super();
            _CreateJobInterviewAnalysisRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CreateJobInterviewAnalysisRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("job_interview_id" in data && data.job_interview_id != undefined) {
                    this.job_interview_id = data.job_interview_id;
                }
            }
        }
        get job_interview_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set job_interview_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new CreateJobInterviewAnalysisRequest({});
            if (data.job_interview_id != null) {
                message.job_interview_id = data.job_interview_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.job_interview_id != null) {
                data.job_interview_id = this.job_interview_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.job_interview_id.length)
                writer.writeString(1, this.job_interview_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateJobInterviewAnalysisRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.job_interview_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return CreateJobInterviewAnalysisRequest.deserialize(bytes);
        }
    }
    _CreateJobInterviewAnalysisRequest_one_of_decls = new WeakMap();
    job_interview_analysis_service.CreateJobInterviewAnalysisRequest = CreateJobInterviewAnalysisRequest;
    class CreateJobInterviewAnalysisResponse extends pb_1.Message {
        constructor(data) {
            super();
            _CreateJobInterviewAnalysisResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CreateJobInterviewAnalysisResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("job_interview_analysis_id" in data && data.job_interview_analysis_id != undefined) {
                    this.job_interview_analysis_id = data.job_interview_analysis_id;
                }
            }
        }
        get job_interview_analysis_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set job_interview_analysis_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new CreateJobInterviewAnalysisResponse({});
            if (data.job_interview_analysis_id != null) {
                message.job_interview_analysis_id = data.job_interview_analysis_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.job_interview_analysis_id != null) {
                data.job_interview_analysis_id = this.job_interview_analysis_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.job_interview_analysis_id.length)
                writer.writeString(1, this.job_interview_analysis_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateJobInterviewAnalysisResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.job_interview_analysis_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return CreateJobInterviewAnalysisResponse.deserialize(bytes);
        }
    }
    _CreateJobInterviewAnalysisResponse_one_of_decls = new WeakMap();
    job_interview_analysis_service.CreateJobInterviewAnalysisResponse = CreateJobInterviewAnalysisResponse;
    class ReadJobInterviewAnalysisRequest extends pb_1.Message {
        constructor(data) {
            super();
            _ReadJobInterviewAnalysisRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ReadJobInterviewAnalysisRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("job_interview_id" in data && data.job_interview_id != undefined) {
                    this.job_interview_id = data.job_interview_id;
                }
            }
        }
        get job_interview_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set job_interview_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new ReadJobInterviewAnalysisRequest({});
            if (data.job_interview_id != null) {
                message.job_interview_id = data.job_interview_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.job_interview_id != null) {
                data.job_interview_id = this.job_interview_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.job_interview_id.length)
                writer.writeString(1, this.job_interview_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadJobInterviewAnalysisRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.job_interview_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ReadJobInterviewAnalysisRequest.deserialize(bytes);
        }
    }
    _ReadJobInterviewAnalysisRequest_one_of_decls = new WeakMap();
    job_interview_analysis_service.ReadJobInterviewAnalysisRequest = ReadJobInterviewAnalysisRequest;
    class ReadJobInterviewAnalysisResponse extends pb_1.Message {
        constructor(data) {
            super();
            _ReadJobInterviewAnalysisResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ReadJobInterviewAnalysisResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("analysis" in data && data.analysis != undefined) {
                    this.analysis = data.analysis;
                }
            }
        }
        get analysis() {
            return pb_1.Message.getWrapperField(this, Analysis, 1);
        }
        set analysis(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_analysis() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data) {
            const message = new ReadJobInterviewAnalysisResponse({});
            if (data.analysis != null) {
                message.analysis = Analysis.fromObject(data.analysis);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.analysis != null) {
                data.analysis = this.analysis.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_analysis)
                writer.writeMessage(1, this.analysis, () => this.analysis.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadJobInterviewAnalysisResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.analysis, () => message.analysis = Analysis.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ReadJobInterviewAnalysisResponse.deserialize(bytes);
        }
    }
    _ReadJobInterviewAnalysisResponse_one_of_decls = new WeakMap();
    job_interview_analysis_service.ReadJobInterviewAnalysisResponse = ReadJobInterviewAnalysisResponse;
    class UpdateJobInterviewAnalysisRequest extends pb_1.Message {
        constructor(data) {
            super();
            _UpdateJobInterviewAnalysisRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UpdateJobInterviewAnalysisRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new UpdateJobInterviewAnalysisRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateJobInterviewAnalysisRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return UpdateJobInterviewAnalysisRequest.deserialize(bytes);
        }
    }
    _UpdateJobInterviewAnalysisRequest_one_of_decls = new WeakMap();
    job_interview_analysis_service.UpdateJobInterviewAnalysisRequest = UpdateJobInterviewAnalysisRequest;
    class UpdateJobInterviewAnalysisResponse extends pb_1.Message {
        constructor(data) {
            super();
            _UpdateJobInterviewAnalysisResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UpdateJobInterviewAnalysisResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new UpdateJobInterviewAnalysisResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateJobInterviewAnalysisResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return UpdateJobInterviewAnalysisResponse.deserialize(bytes);
        }
    }
    _UpdateJobInterviewAnalysisResponse_one_of_decls = new WeakMap();
    job_interview_analysis_service.UpdateJobInterviewAnalysisResponse = UpdateJobInterviewAnalysisResponse;
    class DeleteJobInterviewAnalysisRequest extends pb_1.Message {
        constructor(data) {
            super();
            _DeleteJobInterviewAnalysisRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _DeleteJobInterviewAnalysisRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new DeleteJobInterviewAnalysisRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteJobInterviewAnalysisRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return DeleteJobInterviewAnalysisRequest.deserialize(bytes);
        }
    }
    _DeleteJobInterviewAnalysisRequest_one_of_decls = new WeakMap();
    job_interview_analysis_service.DeleteJobInterviewAnalysisRequest = DeleteJobInterviewAnalysisRequest;
    class DeleteJobInterviewAnalysisResponse extends pb_1.Message {
        constructor(data) {
            super();
            _DeleteJobInterviewAnalysisResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _DeleteJobInterviewAnalysisResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new DeleteJobInterviewAnalysisResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteJobInterviewAnalysisResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return DeleteJobInterviewAnalysisResponse.deserialize(bytes);
        }
    }
    _DeleteJobInterviewAnalysisResponse_one_of_decls = new WeakMap();
    job_interview_analysis_service.DeleteJobInterviewAnalysisResponse = DeleteJobInterviewAnalysisResponse;
    class GetAnalysesForInterviewsRequest extends pb_1.Message {
        constructor(data) {
            super();
            _GetAnalysesForInterviewsRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _GetAnalysesForInterviewsRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("job_application_id" in data && data.job_application_id != undefined) {
                    this.job_application_id = data.job_application_id;
                }
            }
        }
        get job_application_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set job_application_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new GetAnalysesForInterviewsRequest({});
            if (data.job_application_id != null) {
                message.job_application_id = data.job_application_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.job_application_id != null) {
                data.job_application_id = this.job_application_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.job_application_id.length)
                writer.writeString(1, this.job_application_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAnalysesForInterviewsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.job_application_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return GetAnalysesForInterviewsRequest.deserialize(bytes);
        }
    }
    _GetAnalysesForInterviewsRequest_one_of_decls = new WeakMap();
    job_interview_analysis_service.GetAnalysesForInterviewsRequest = GetAnalysesForInterviewsRequest;
    class GetAnalysesForInterviewsResponse extends pb_1.Message {
        constructor(data) {
            super();
            _GetAnalysesForInterviewsResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], __classPrivateFieldGet(this, _GetAnalysesForInterviewsResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("analyses" in data && data.analyses != undefined) {
                    this.analyses = data.analyses;
                }
            }
        }
        get analyses() {
            return pb_1.Message.getRepeatedWrapperField(this, AnalysisForInterview, 1);
        }
        set analyses(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new GetAnalysesForInterviewsResponse({});
            if (data.analyses != null) {
                message.analyses = data.analyses.map(item => AnalysisForInterview.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.analyses != null) {
                data.analyses = this.analyses.map((item) => item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.analyses.length)
                writer.writeRepeatedMessage(1, this.analyses, (item) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAnalysesForInterviewsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.analyses, () => pb_1.Message.addToRepeatedWrapperField(message, 1, AnalysisForInterview.deserialize(reader), AnalysisForInterview));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return GetAnalysesForInterviewsResponse.deserialize(bytes);
        }
    }
    _GetAnalysesForInterviewsResponse_one_of_decls = new WeakMap();
    job_interview_analysis_service.GetAnalysesForInterviewsResponse = GetAnalysesForInterviewsResponse;
    class CreateAnalysesForInterviewsRequest extends pb_1.Message {
        constructor(data) {
            super();
            _CreateAnalysesForInterviewsRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CreateAnalysesForInterviewsRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("job_application_id" in data && data.job_application_id != undefined) {
                    this.job_application_id = data.job_application_id;
                }
            }
        }
        get job_application_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set job_application_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new CreateAnalysesForInterviewsRequest({});
            if (data.job_application_id != null) {
                message.job_application_id = data.job_application_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.job_application_id != null) {
                data.job_application_id = this.job_application_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.job_application_id.length)
                writer.writeString(1, this.job_application_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateAnalysesForInterviewsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.job_application_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return CreateAnalysesForInterviewsRequest.deserialize(bytes);
        }
    }
    _CreateAnalysesForInterviewsRequest_one_of_decls = new WeakMap();
    job_interview_analysis_service.CreateAnalysesForInterviewsRequest = CreateAnalysesForInterviewsRequest;
    class CreateAnalysesForInterviewsResponse extends pb_1.Message {
        constructor(data) {
            super();
            _CreateAnalysesForInterviewsResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CreateAnalysesForInterviewsResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new CreateAnalysesForInterviewsResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateAnalysesForInterviewsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return CreateAnalysesForInterviewsResponse.deserialize(bytes);
        }
    }
    _CreateAnalysesForInterviewsResponse_one_of_decls = new WeakMap();
    job_interview_analysis_service.CreateAnalysesForInterviewsResponse = CreateAnalysesForInterviewsResponse;
    class AnalysisForInterview extends pb_1.Message {
        constructor(data) {
            super();
            _AnalysisForInterview_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _AnalysisForInterview_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("job_interview_id" in data && data.job_interview_id != undefined) {
                    this.job_interview_id = data.job_interview_id;
                }
                if ("analysis" in data && data.analysis != undefined) {
                    this.analysis = data.analysis;
                }
            }
        }
        get job_interview_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set job_interview_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get analysis() {
            return pb_1.Message.getWrapperField(this, Analysis, 2);
        }
        set analysis(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_analysis() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data) {
            const message = new AnalysisForInterview({});
            if (data.job_interview_id != null) {
                message.job_interview_id = data.job_interview_id;
            }
            if (data.analysis != null) {
                message.analysis = Analysis.fromObject(data.analysis);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.job_interview_id != null) {
                data.job_interview_id = this.job_interview_id;
            }
            if (this.analysis != null) {
                data.analysis = this.analysis.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.job_interview_id.length)
                writer.writeString(1, this.job_interview_id);
            if (this.has_analysis)
                writer.writeMessage(2, this.analysis, () => this.analysis.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AnalysisForInterview();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.job_interview_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.analysis, () => message.analysis = Analysis.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return AnalysisForInterview.deserialize(bytes);
        }
    }
    _AnalysisForInterview_one_of_decls = new WeakMap();
    job_interview_analysis_service.AnalysisForInterview = AnalysisForInterview;
    class Analysis extends pb_1.Message {
        constructor(data) {
            super();
            _Analysis_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Analysis_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("last_message_id" in data && data.last_message_id != undefined) {
                    this.last_message_id = data.last_message_id;
                }
                if ("last_message_ts" in data && data.last_message_ts != undefined) {
                    this.last_message_ts = data.last_message_ts;
                }
                if ("analysis" in data && data.analysis != undefined) {
                    this.analysis = data.analysis;
                }
            }
        }
        get last_message_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set last_message_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get last_message_ts() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 2);
        }
        set last_message_ts(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_last_message_ts() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get analysis() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set analysis(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new Analysis({});
            if (data.last_message_id != null) {
                message.last_message_id = data.last_message_id;
            }
            if (data.last_message_ts != null) {
                message.last_message_ts = dependency_1.google.protobuf.Timestamp.fromObject(data.last_message_ts);
            }
            if (data.analysis != null) {
                message.analysis = data.analysis;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.last_message_id != null) {
                data.last_message_id = this.last_message_id;
            }
            if (this.last_message_ts != null) {
                data.last_message_ts = this.last_message_ts.toObject();
            }
            if (this.analysis != null) {
                data.analysis = this.analysis;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.last_message_id.length)
                writer.writeString(1, this.last_message_id);
            if (this.has_last_message_ts)
                writer.writeMessage(2, this.last_message_ts, () => this.last_message_ts.serialize(writer));
            if (this.analysis.length)
                writer.writeString(3, this.analysis);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Analysis();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.last_message_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.last_message_ts, () => message.last_message_ts = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 3:
                        message.analysis = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return Analysis.deserialize(bytes);
        }
    }
    _Analysis_one_of_decls = new WeakMap();
    job_interview_analysis_service.Analysis = Analysis;
    class UnimplementedJobInterviewAnalysisServiceService {
    }
    UnimplementedJobInterviewAnalysisServiceService.definition = {
        CreateJobInterviewAnalysis: {
            path: "/job_interview_analysis_service.JobInterviewAnalysisService/CreateJobInterviewAnalysis",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => CreateJobInterviewAnalysisRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => CreateJobInterviewAnalysisResponse.deserialize(new Uint8Array(bytes))
        },
        ReadJobInterviewAnalysis: {
            path: "/job_interview_analysis_service.JobInterviewAnalysisService/ReadJobInterviewAnalysis",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => ReadJobInterviewAnalysisRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => ReadJobInterviewAnalysisResponse.deserialize(new Uint8Array(bytes))
        },
        UpdateJobInterviewAnalysis: {
            path: "/job_interview_analysis_service.JobInterviewAnalysisService/UpdateJobInterviewAnalysis",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => UpdateJobInterviewAnalysisRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => UpdateJobInterviewAnalysisResponse.deserialize(new Uint8Array(bytes))
        },
        DeleteJobInterviewAnalysis: {
            path: "/job_interview_analysis_service.JobInterviewAnalysisService/DeleteJobInterviewAnalysis",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => DeleteJobInterviewAnalysisRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => DeleteJobInterviewAnalysisResponse.deserialize(new Uint8Array(bytes))
        },
        CreateAnalysesForInterviews: {
            path: "/job_interview_analysis_service.JobInterviewAnalysisService/CreateAnalysesForInterviews",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => CreateAnalysesForInterviewsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => CreateAnalysesForInterviewsResponse.deserialize(new Uint8Array(bytes))
        },
        GetAnalysesForInterviews: {
            path: "/job_interview_analysis_service.JobInterviewAnalysisService/GetAnalysesForInterviews",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => GetAnalysesForInterviewsRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => GetAnalysesForInterviewsResponse.deserialize(new Uint8Array(bytes))
        }
    };
    job_interview_analysis_service.UnimplementedJobInterviewAnalysisServiceService = UnimplementedJobInterviewAnalysisServiceService;
    class JobInterviewAnalysisServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedJobInterviewAnalysisServiceService.definition, "JobInterviewAnalysisService", {}) {
        constructor(address, credentials, options) {
            super(address, credentials, options);
            this.CreateJobInterviewAnalysis = (message, metadata, options, callback) => {
                return super.CreateJobInterviewAnalysis(message, metadata, options, callback);
            };
            this.ReadJobInterviewAnalysis = (message, metadata, options, callback) => {
                return super.ReadJobInterviewAnalysis(message, metadata, options, callback);
            };
            this.UpdateJobInterviewAnalysis = (message, metadata, options, callback) => {
                return super.UpdateJobInterviewAnalysis(message, metadata, options, callback);
            };
            this.DeleteJobInterviewAnalysis = (message, metadata, options, callback) => {
                return super.DeleteJobInterviewAnalysis(message, metadata, options, callback);
            };
            this.CreateAnalysesForInterviews = (message, metadata, options, callback) => {
                return super.CreateAnalysesForInterviews(message, metadata, options, callback);
            };
            this.GetAnalysesForInterviews = (message, metadata, options, callback) => {
                return super.GetAnalysesForInterviews(message, metadata, options, callback);
            };
        }
    }
    job_interview_analysis_service.JobInterviewAnalysisServiceClient = JobInterviewAnalysisServiceClient;
})(job_interview_analysis_service || (exports.job_interview_analysis_service = job_interview_analysis_service = {}));
