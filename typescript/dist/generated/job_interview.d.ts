/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.3
 * source: job_interview.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace job_interview_service {
    export class CreateJobInterviewRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_application_id?: string;
        });
        get job_application_id(): string;
        set job_application_id(value: string);
        static fromObject(data: {
            job_application_id?: string;
        }): CreateJobInterviewRequest;
        toObject(): {
            job_application_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateJobInterviewRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): CreateJobInterviewRequest;
    }
    export class CreateJobInterviewResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_interview_id?: string;
        });
        get job_interview_id(): string;
        set job_interview_id(value: string);
        static fromObject(data: {
            job_interview_id?: string;
        }): CreateJobInterviewResponse;
        toObject(): {
            job_interview_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateJobInterviewResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): CreateJobInterviewResponse;
    }
    export class ReadJobInterviewRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_interview_id?: string;
        });
        get job_interview_id(): string;
        set job_interview_id(value: string);
        static fromObject(data: {
            job_interview_id?: string;
        }): ReadJobInterviewRequest;
        toObject(): {
            job_interview_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobInterviewRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadJobInterviewRequest;
    }
    export class ReadJobInterviewResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_application_id?: string;
            conversation?: Message[];
        });
        get job_application_id(): string;
        set job_application_id(value: string);
        get conversation(): Message[];
        set conversation(value: Message[]);
        static fromObject(data: {
            job_application_id?: string;
            conversation?: ReturnType<typeof Message.prototype.toObject>[];
        }): ReadJobInterviewResponse;
        toObject(): {
            job_application_id?: string;
            conversation?: ReturnType<typeof Message.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobInterviewResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadJobInterviewResponse;
    }
    export class UpdateJobInterviewRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_interview_id?: string;
            conversation?: Message[];
        });
        get job_interview_id(): string;
        set job_interview_id(value: string);
        get conversation(): Message[];
        set conversation(value: Message[]);
        static fromObject(data: {
            job_interview_id?: string;
            conversation?: ReturnType<typeof Message.prototype.toObject>[];
        }): UpdateJobInterviewRequest;
        toObject(): {
            job_interview_id?: string;
            conversation?: ReturnType<typeof Message.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateJobInterviewRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): UpdateJobInterviewRequest;
    }
    export class UpdateJobInterviewResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            success?: boolean;
        });
        get success(): boolean;
        set success(value: boolean);
        static fromObject(data: {
            success?: boolean;
        }): UpdateJobInterviewResponse;
        toObject(): {
            success?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateJobInterviewResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): UpdateJobInterviewResponse;
    }
    export class DeleteJobInterviewRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_interview_id?: string;
        });
        get job_interview_id(): string;
        set job_interview_id(value: string);
        static fromObject(data: {
            job_interview_id?: string;
        }): DeleteJobInterviewRequest;
        toObject(): {
            job_interview_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteJobInterviewRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): DeleteJobInterviewRequest;
    }
    export class DeleteJobInterviewResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            success?: boolean;
        });
        get success(): boolean;
        set success(value: boolean);
        static fromObject(data: {
            success?: boolean;
        }): DeleteJobInterviewResponse;
        toObject(): {
            success?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteJobInterviewResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): DeleteJobInterviewResponse;
    }
    export class InterviewMessageRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            req?: InterviewMessage;
        });
        get req(): InterviewMessage;
        set req(value: InterviewMessage);
        get has_req(): boolean;
        static fromObject(data: {
            req?: ReturnType<typeof InterviewMessage.prototype.toObject>;
        }): InterviewMessageRequest;
        toObject(): {
            req?: ReturnType<typeof InterviewMessage.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InterviewMessageRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): InterviewMessageRequest;
    }
    export class InterviewMessageResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            res?: InterviewMessage;
        });
        get res(): InterviewMessage;
        set res(value: InterviewMessage);
        get has_res(): boolean;
        static fromObject(data: {
            res?: ReturnType<typeof InterviewMessage.prototype.toObject>;
        }): InterviewMessageResponse;
        toObject(): {
            res?: ReturnType<typeof InterviewMessage.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InterviewMessageResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): InterviewMessageResponse;
    }
    export class InterviewMessage extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_interview_id?: string;
            message?: Message;
        });
        get job_interview_id(): string;
        set job_interview_id(value: string);
        get message(): Message;
        set message(value: Message);
        get has_message(): boolean;
        static fromObject(data: {
            job_interview_id?: string;
            message?: ReturnType<typeof Message.prototype.toObject>;
        }): InterviewMessage;
        toObject(): {
            job_interview_id?: string;
            message?: ReturnType<typeof Message.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InterviewMessage;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): InterviewMessage;
    }
    export class Message extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            id?: string;
            from?: string;
            contents?: string;
            time?: dependency_1.google.protobuf.Timestamp;
        });
        get id(): string;
        set id(value: string);
        get from(): string;
        set from(value: string);
        get contents(): string;
        set contents(value: string);
        get time(): dependency_1.google.protobuf.Timestamp;
        set time(value: dependency_1.google.protobuf.Timestamp);
        get has_time(): boolean;
        static fromObject(data: {
            id?: string;
            from?: string;
            contents?: string;
            time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): Message;
        toObject(): {
            id?: string;
            from?: string;
            contents?: string;
            time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Message;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Message;
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    export abstract class UnimplementedJobInterviewServiceService {
        static definition: {
            CreateJobInterview: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: CreateJobInterviewRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => CreateJobInterviewRequest;
                responseSerialize: (message: CreateJobInterviewResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => CreateJobInterviewResponse;
            };
            ReadJobInterview: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: ReadJobInterviewRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => ReadJobInterviewRequest;
                responseSerialize: (message: ReadJobInterviewResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => ReadJobInterviewResponse;
            };
            UpdateJobInterview: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: UpdateJobInterviewRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => UpdateJobInterviewRequest;
                responseSerialize: (message: UpdateJobInterviewResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => UpdateJobInterviewResponse;
            };
            DeleteJobInterview: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: DeleteJobInterviewRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => DeleteJobInterviewRequest;
                responseSerialize: (message: DeleteJobInterviewResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => DeleteJobInterviewResponse;
            };
            UnaryConversation: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: InterviewMessageRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => InterviewMessageRequest;
                responseSerialize: (message: InterviewMessageResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => InterviewMessageResponse;
            };
            BidirectionalConversation: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: InterviewMessage) => Buffer;
                requestDeserialize: (bytes: Buffer) => InterviewMessage;
                responseSerialize: (message: InterviewMessage) => Buffer;
                responseDeserialize: (bytes: Buffer) => InterviewMessage;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract CreateJobInterview(call: grpc_1.ServerUnaryCall<CreateJobInterviewRequest, CreateJobInterviewResponse>, callback: grpc_1.sendUnaryData<CreateJobInterviewResponse>): void;
        abstract ReadJobInterview(call: grpc_1.ServerUnaryCall<ReadJobInterviewRequest, ReadJobInterviewResponse>, callback: grpc_1.sendUnaryData<ReadJobInterviewResponse>): void;
        abstract UpdateJobInterview(call: grpc_1.ServerUnaryCall<UpdateJobInterviewRequest, UpdateJobInterviewResponse>, callback: grpc_1.sendUnaryData<UpdateJobInterviewResponse>): void;
        abstract DeleteJobInterview(call: grpc_1.ServerUnaryCall<DeleteJobInterviewRequest, DeleteJobInterviewResponse>, callback: grpc_1.sendUnaryData<DeleteJobInterviewResponse>): void;
        abstract UnaryConversation(call: grpc_1.ServerUnaryCall<InterviewMessageRequest, InterviewMessageResponse>, callback: grpc_1.sendUnaryData<InterviewMessageResponse>): void;
        abstract BidirectionalConversation(call: grpc_1.ServerDuplexStream<InterviewMessage, InterviewMessage>): void;
    }
    const JobInterviewServiceClient_base: grpc_1.ServiceClientConstructor;
    export class JobInterviewServiceClient extends JobInterviewServiceClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        CreateJobInterview: GrpcUnaryServiceInterface<CreateJobInterviewRequest, CreateJobInterviewResponse>;
        ReadJobInterview: GrpcUnaryServiceInterface<ReadJobInterviewRequest, ReadJobInterviewResponse>;
        UpdateJobInterview: GrpcUnaryServiceInterface<UpdateJobInterviewRequest, UpdateJobInterviewResponse>;
        DeleteJobInterview: GrpcUnaryServiceInterface<DeleteJobInterviewRequest, DeleteJobInterviewResponse>;
        UnaryConversation: GrpcUnaryServiceInterface<InterviewMessageRequest, InterviewMessageResponse>;
        BidirectionalConversation: GrpcChunkServiceInterface<InterviewMessage, InterviewMessage>;
    }
    export {};
}
