"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.organization_service = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.3
 * source: organization.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = __importStar(require("google-protobuf"));
const grpc_1 = __importStar(require("@grpc/grpc-js"));
var organization_service;
(function (organization_service) {
    var _CreateOrganizationRequest_one_of_decls, _CreateOrganizationResponse_one_of_decls, _ReadOrganizationRequest_one_of_decls, _ReadOrganizationResponse_one_of_decls, _ReadOrganizationByQueryRequest_one_of_decls, _ReadOrganizationByQueryResponse_one_of_decls, _UpdateOrganizationRequest_one_of_decls, _UpdateOrganizationResponse_one_of_decls, _DeleteOrganizationRequest_one_of_decls, _DeleteOrganizationResponse_one_of_decls, _AddMemberRequest_one_of_decls, _AddMemberResponse_one_of_decls, _Membership_one_of_decls, _User_one_of_decls, _UserInfo_one_of_decls, _UserAuthorization_one_of_decls;
    class CreateOrganizationRequest extends pb_1.Message {
        constructor(data) {
            super();
            _CreateOrganizationRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CreateOrganizationRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new CreateOrganizationRequest({});
            if (data.name != null) {
                message.name = data.name;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.name != null) {
                data.name = this.name;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateOrganizationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return CreateOrganizationRequest.deserialize(bytes);
        }
    }
    _CreateOrganizationRequest_one_of_decls = new WeakMap();
    organization_service.CreateOrganizationRequest = CreateOrganizationRequest;
    class CreateOrganizationResponse extends pb_1.Message {
        constructor(data) {
            super();
            _CreateOrganizationResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CreateOrganizationResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("organization_id" in data && data.organization_id != undefined) {
                    this.organization_id = data.organization_id;
                }
            }
        }
        get organization_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set organization_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new CreateOrganizationResponse({});
            if (data.organization_id != null) {
                message.organization_id = data.organization_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.organization_id != null) {
                data.organization_id = this.organization_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.organization_id.length)
                writer.writeString(1, this.organization_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateOrganizationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.organization_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return CreateOrganizationResponse.deserialize(bytes);
        }
    }
    _CreateOrganizationResponse_one_of_decls = new WeakMap();
    organization_service.CreateOrganizationResponse = CreateOrganizationResponse;
    class ReadOrganizationRequest extends pb_1.Message {
        constructor(data) {
            super();
            _ReadOrganizationRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ReadOrganizationRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("organization_id" in data && data.organization_id != undefined) {
                    this.organization_id = data.organization_id;
                }
            }
        }
        get organization_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set organization_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new ReadOrganizationRequest({});
            if (data.organization_id != null) {
                message.organization_id = data.organization_id;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.organization_id != null) {
                data.organization_id = this.organization_id;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.organization_id.length)
                writer.writeString(1, this.organization_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadOrganizationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.organization_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ReadOrganizationRequest.deserialize(bytes);
        }
    }
    _ReadOrganizationRequest_one_of_decls = new WeakMap();
    organization_service.ReadOrganizationRequest = ReadOrganizationRequest;
    class ReadOrganizationResponse extends pb_1.Message {
        constructor(data) {
            super();
            _ReadOrganizationResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ReadOrganizationResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("membership" in data && data.membership != undefined) {
                    this.membership = data.membership;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get membership() {
            return pb_1.Message.getWrapperField(this, Membership, 2);
        }
        set membership(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_membership() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data) {
            const message = new ReadOrganizationResponse({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.membership != null) {
                message.membership = Membership.fromObject(data.membership);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.membership != null) {
                data.membership = this.membership.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.has_membership)
                writer.writeMessage(2, this.membership, () => this.membership.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadOrganizationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.membership, () => message.membership = Membership.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ReadOrganizationResponse.deserialize(bytes);
        }
    }
    _ReadOrganizationResponse_one_of_decls = new WeakMap();
    organization_service.ReadOrganizationResponse = ReadOrganizationResponse;
    class ReadOrganizationByQueryRequest extends pb_1.Message {
        constructor(data) {
            super();
            _ReadOrganizationByQueryRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ReadOrganizationByQueryRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new ReadOrganizationByQueryRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadOrganizationByQueryRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ReadOrganizationByQueryRequest.deserialize(bytes);
        }
    }
    _ReadOrganizationByQueryRequest_one_of_decls = new WeakMap();
    organization_service.ReadOrganizationByQueryRequest = ReadOrganizationByQueryRequest;
    class ReadOrganizationByQueryResponse extends pb_1.Message {
        constructor(data) {
            super();
            _ReadOrganizationByQueryResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ReadOrganizationByQueryResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new ReadOrganizationByQueryResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReadOrganizationByQueryResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ReadOrganizationByQueryResponse.deserialize(bytes);
        }
    }
    _ReadOrganizationByQueryResponse_one_of_decls = new WeakMap();
    organization_service.ReadOrganizationByQueryResponse = ReadOrganizationByQueryResponse;
    class UpdateOrganizationRequest extends pb_1.Message {
        constructor(data) {
            super();
            _UpdateOrganizationRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UpdateOrganizationRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new UpdateOrganizationRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateOrganizationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return UpdateOrganizationRequest.deserialize(bytes);
        }
    }
    _UpdateOrganizationRequest_one_of_decls = new WeakMap();
    organization_service.UpdateOrganizationRequest = UpdateOrganizationRequest;
    class UpdateOrganizationResponse extends pb_1.Message {
        constructor(data) {
            super();
            _UpdateOrganizationResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UpdateOrganizationResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new UpdateOrganizationResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateOrganizationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return UpdateOrganizationResponse.deserialize(bytes);
        }
    }
    _UpdateOrganizationResponse_one_of_decls = new WeakMap();
    organization_service.UpdateOrganizationResponse = UpdateOrganizationResponse;
    class DeleteOrganizationRequest extends pb_1.Message {
        constructor(data) {
            super();
            _DeleteOrganizationRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _DeleteOrganizationRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new DeleteOrganizationRequest({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteOrganizationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return DeleteOrganizationRequest.deserialize(bytes);
        }
    }
    _DeleteOrganizationRequest_one_of_decls = new WeakMap();
    organization_service.DeleteOrganizationRequest = DeleteOrganizationRequest;
    class DeleteOrganizationResponse extends pb_1.Message {
        constructor(data) {
            super();
            _DeleteOrganizationResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _DeleteOrganizationResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data) {
            const message = new DeleteOrganizationResponse({});
            return message;
        }
        toObject() {
            const data = {};
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteOrganizationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return DeleteOrganizationResponse.deserialize(bytes);
        }
    }
    _DeleteOrganizationResponse_one_of_decls = new WeakMap();
    organization_service.DeleteOrganizationResponse = DeleteOrganizationResponse;
    class AddMemberRequest extends pb_1.Message {
        constructor(data) {
            super();
            _AddMemberRequest_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _AddMemberRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("organization_id" in data && data.organization_id != undefined) {
                    this.organization_id = data.organization_id;
                }
                if ("user" in data && data.user != undefined) {
                    this.user = data.user;
                }
            }
        }
        get organization_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set organization_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get user() {
            return pb_1.Message.getWrapperField(this, User, 2);
        }
        set user(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_user() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data) {
            const message = new AddMemberRequest({});
            if (data.organization_id != null) {
                message.organization_id = data.organization_id;
            }
            if (data.user != null) {
                message.user = User.fromObject(data.user);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.organization_id != null) {
                data.organization_id = this.organization_id;
            }
            if (this.user != null) {
                data.user = this.user.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.organization_id.length)
                writer.writeString(1, this.organization_id);
            if (this.has_user)
                writer.writeMessage(2, this.user, () => this.user.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AddMemberRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.organization_id = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.user, () => message.user = User.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return AddMemberRequest.deserialize(bytes);
        }
    }
    _AddMemberRequest_one_of_decls = new WeakMap();
    organization_service.AddMemberRequest = AddMemberRequest;
    class AddMemberResponse extends pb_1.Message {
        constructor(data) {
            super();
            _AddMemberResponse_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _AddMemberResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
            }
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 1, false);
        }
        set success(value) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data) {
            const message = new AddMemberResponse({});
            if (data.success != null) {
                message.success = data.success;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.success != null) {
                data.success = this.success;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.success != false)
                writer.writeBool(1, this.success);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AddMemberResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.success = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return AddMemberResponse.deserialize(bytes);
        }
    }
    _AddMemberResponse_one_of_decls = new WeakMap();
    organization_service.AddMemberResponse = AddMemberResponse;
    class Membership extends pb_1.Message {
        constructor(data) {
            super();
            _Membership_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], __classPrivateFieldGet(this, _Membership_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("users" in data && data.users != undefined) {
                    this.users = data.users;
                }
            }
        }
        get users() {
            return pb_1.Message.getRepeatedWrapperField(this, User, 1);
        }
        set users(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data) {
            const message = new Membership({});
            if (data.users != null) {
                message.users = data.users.map(item => User.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.users != null) {
                data.users = this.users.map((item) => item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.users.length)
                writer.writeRepeatedMessage(1, this.users, (item) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Membership();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.users, () => pb_1.Message.addToRepeatedWrapperField(message, 1, User.deserialize(reader), User));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return Membership.deserialize(bytes);
        }
    }
    _Membership_one_of_decls = new WeakMap();
    organization_service.Membership = Membership;
    class User extends pb_1.Message {
        constructor(data) {
            super();
            _User_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _User_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_info" in data && data.user_info != undefined) {
                    this.user_info = data.user_info;
                }
                if ("user_authorization" in data && data.user_authorization != undefined) {
                    this.user_authorization = data.user_authorization;
                }
            }
        }
        get user_info() {
            return pb_1.Message.getWrapperField(this, UserInfo, 1);
        }
        set user_info(value) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_user_info() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get user_authorization() {
            return pb_1.Message.getWrapperField(this, UserAuthorization, 2);
        }
        set user_authorization(value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_user_authorization() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data) {
            const message = new User({});
            if (data.user_info != null) {
                message.user_info = UserInfo.fromObject(data.user_info);
            }
            if (data.user_authorization != null) {
                message.user_authorization = UserAuthorization.fromObject(data.user_authorization);
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.user_info != null) {
                data.user_info = this.user_info.toObject();
            }
            if (this.user_authorization != null) {
                data.user_authorization = this.user_authorization.toObject();
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_user_info)
                writer.writeMessage(1, this.user_info, () => this.user_info.serialize(writer));
            if (this.has_user_authorization)
                writer.writeMessage(2, this.user_authorization, () => this.user_authorization.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new User();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.user_info, () => message.user_info = UserInfo.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.user_authorization, () => message.user_authorization = UserAuthorization.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return User.deserialize(bytes);
        }
    }
    _User_one_of_decls = new WeakMap();
    organization_service.User = User;
    class UserInfo extends pb_1.Message {
        constructor(data) {
            super();
            _UserInfo_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UserInfo_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_id" in data && data.user_id != undefined) {
                    this.user_id = data.user_id;
                }
                if ("user_email" in data && data.user_email != undefined) {
                    this.user_email = data.user_email;
                }
            }
        }
        get user_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set user_id(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_email() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set user_email(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new UserInfo({});
            if (data.user_id != null) {
                message.user_id = data.user_id;
            }
            if (data.user_email != null) {
                message.user_email = data.user_email;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.user_id != null) {
                data.user_id = this.user_id;
            }
            if (this.user_email != null) {
                data.user_email = this.user_email;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_id.length)
                writer.writeString(1, this.user_id);
            if (this.user_email.length)
                writer.writeString(2, this.user_email);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UserInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_id = reader.readString();
                        break;
                    case 2:
                        message.user_email = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return UserInfo.deserialize(bytes);
        }
    }
    _UserInfo_one_of_decls = new WeakMap();
    organization_service.UserInfo = UserInfo;
    class UserAuthorization extends pb_1.Message {
        constructor(data) {
            super();
            _UserAuthorization_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UserAuthorization_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("resource_type" in data && data.resource_type != undefined) {
                    this.resource_type = data.resource_type;
                }
                if ("resource_id" in data && data.resource_id != undefined) {
                    this.resource_id = data.resource_id;
                }
                if ("role" in data && data.role != undefined) {
                    this.role = data.role;
                }
            }
        }
        get resource_type() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set resource_type(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get resource_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "");
        }
        set resource_id(value) {
            pb_1.Message.setField(this, 2, value);
        }
        get role() {
            return pb_1.Message.getFieldWithDefault(this, 3, "");
        }
        set role(value) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data) {
            const message = new UserAuthorization({});
            if (data.resource_type != null) {
                message.resource_type = data.resource_type;
            }
            if (data.resource_id != null) {
                message.resource_id = data.resource_id;
            }
            if (data.role != null) {
                message.role = data.role;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.resource_type != null) {
                data.resource_type = this.resource_type;
            }
            if (this.resource_id != null) {
                data.resource_id = this.resource_id;
            }
            if (this.role != null) {
                data.role = this.role;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.resource_type.length)
                writer.writeString(1, this.resource_type);
            if (this.resource_id.length)
                writer.writeString(2, this.resource_id);
            if (this.role.length)
                writer.writeString(3, this.role);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UserAuthorization();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.resource_type = reader.readString();
                        break;
                    case 2:
                        message.resource_id = reader.readString();
                        break;
                    case 3:
                        message.role = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return UserAuthorization.deserialize(bytes);
        }
    }
    _UserAuthorization_one_of_decls = new WeakMap();
    organization_service.UserAuthorization = UserAuthorization;
    class UnimplementedOrganizationServiceService {
    }
    UnimplementedOrganizationServiceService.definition = {
        CreateOrganization: {
            path: "/organization_service.OrganizationService/CreateOrganization",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => CreateOrganizationRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => CreateOrganizationResponse.deserialize(new Uint8Array(bytes))
        },
        ReadOrganization: {
            path: "/organization_service.OrganizationService/ReadOrganization",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => ReadOrganizationRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => ReadOrganizationResponse.deserialize(new Uint8Array(bytes))
        },
        UpdateOrganization: {
            path: "/organization_service.OrganizationService/UpdateOrganization",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => UpdateOrganizationRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => UpdateOrganizationResponse.deserialize(new Uint8Array(bytes))
        },
        DeleteOrganization: {
            path: "/organization_service.OrganizationService/DeleteOrganization",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => DeleteOrganizationRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => DeleteOrganizationResponse.deserialize(new Uint8Array(bytes))
        },
        AddMember: {
            path: "/organization_service.OrganizationService/AddMember",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes) => AddMemberRequest.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes) => AddMemberResponse.deserialize(new Uint8Array(bytes))
        }
    };
    organization_service.UnimplementedOrganizationServiceService = UnimplementedOrganizationServiceService;
    class OrganizationServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedOrganizationServiceService.definition, "OrganizationService", {}) {
        constructor(address, credentials, options) {
            super(address, credentials, options);
            this.CreateOrganization = (message, metadata, options, callback) => {
                return super.CreateOrganization(message, metadata, options, callback);
            };
            this.ReadOrganization = (message, metadata, options, callback) => {
                return super.ReadOrganization(message, metadata, options, callback);
            };
            this.UpdateOrganization = (message, metadata, options, callback) => {
                return super.UpdateOrganization(message, metadata, options, callback);
            };
            this.DeleteOrganization = (message, metadata, options, callback) => {
                return super.DeleteOrganization(message, metadata, options, callback);
            };
            this.AddMember = (message, metadata, options, callback) => {
                return super.AddMember(message, metadata, options, callback);
            };
        }
    }
    organization_service.OrganizationServiceClient = OrganizationServiceClient;
})(organization_service || (exports.organization_service = organization_service = {}));
