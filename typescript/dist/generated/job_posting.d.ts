/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.3
 * source: job_posting.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace job_posting_service {
    export class CreateJobPostingRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: Salary;
            bonus_salary?: Salary;
            qualifications?: string[];
            organization_id?: string;
        });
        get industry(): string;
        set industry(value: string);
        get company_name(): string;
        set company_name(value: string);
        get location(): string;
        set location(value: string);
        get title(): string;
        set title(value: string);
        get base_salary(): Salary;
        set base_salary(value: Salary);
        get has_base_salary(): boolean;
        get bonus_salary(): Salary;
        set bonus_salary(value: Salary);
        get has_bonus_salary(): boolean;
        get qualifications(): string[];
        set qualifications(value: string[]);
        get organization_id(): string;
        set organization_id(value: string);
        static fromObject(data: {
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
            organization_id?: string;
        }): CreateJobPostingRequest;
        toObject(): {
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
            organization_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateJobPostingRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): CreateJobPostingRequest;
    }
    export class CreateJobPostingResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_posting_id?: string;
        });
        get job_posting_id(): string;
        set job_posting_id(value: string);
        static fromObject(data: {
            job_posting_id?: string;
        }): CreateJobPostingResponse;
        toObject(): {
            job_posting_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateJobPostingResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): CreateJobPostingResponse;
    }
    export class ReadJobPostingRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_posting_id?: string;
        });
        get job_posting_id(): string;
        set job_posting_id(value: string);
        static fromObject(data: {
            job_posting_id?: string;
        }): ReadJobPostingRequest;
        toObject(): {
            job_posting_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobPostingRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadJobPostingRequest;
    }
    export class ReadJobPostingResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: Salary;
            bonus_salary?: Salary;
            qualifications?: string[];
        });
        get industry(): string;
        set industry(value: string);
        get company_name(): string;
        set company_name(value: string);
        get location(): string;
        set location(value: string);
        get title(): string;
        set title(value: string);
        get base_salary(): Salary;
        set base_salary(value: Salary);
        get has_base_salary(): boolean;
        get bonus_salary(): Salary;
        set bonus_salary(value: Salary);
        get has_bonus_salary(): boolean;
        get qualifications(): string[];
        set qualifications(value: string[]);
        static fromObject(data: {
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
        }): ReadJobPostingResponse;
        toObject(): {
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobPostingResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadJobPostingResponse;
    }
    export class ReadJobPostingByQueryRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            organization_id?: string;
            query?: JobPostingQuery;
        });
        get organization_id(): string;
        set organization_id(value: string);
        get query(): JobPostingQuery;
        set query(value: JobPostingQuery);
        get has_query(): boolean;
        static fromObject(data: {
            organization_id?: string;
            query?: ReturnType<typeof JobPostingQuery.prototype.toObject>;
        }): ReadJobPostingByQueryRequest;
        toObject(): {
            organization_id?: string;
            query?: ReturnType<typeof JobPostingQuery.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobPostingByQueryRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadJobPostingByQueryRequest;
    }
    export class ReadJobPostingByQueryResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            result?: JobPostingQueryResponse[];
        });
        get result(): JobPostingQueryResponse[];
        set result(value: JobPostingQueryResponse[]);
        static fromObject(data: {
            result?: ReturnType<typeof JobPostingQueryResponse.prototype.toObject>[];
        }): ReadJobPostingByQueryResponse;
        toObject(): {
            result?: ReturnType<typeof JobPostingQueryResponse.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadJobPostingByQueryResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadJobPostingByQueryResponse;
    }
    export class UpdateJobPostingRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_posting_id?: string;
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: Salary;
            bonus_salary?: Salary;
            qualifications?: string[];
        });
        get job_posting_id(): string;
        set job_posting_id(value: string);
        get industry(): string;
        set industry(value: string);
        get company_name(): string;
        set company_name(value: string);
        get location(): string;
        set location(value: string);
        get title(): string;
        set title(value: string);
        get base_salary(): Salary;
        set base_salary(value: Salary);
        get has_base_salary(): boolean;
        get bonus_salary(): Salary;
        set bonus_salary(value: Salary);
        get has_bonus_salary(): boolean;
        get qualifications(): string[];
        set qualifications(value: string[]);
        static fromObject(data: {
            job_posting_id?: string;
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
        }): UpdateJobPostingRequest;
        toObject(): {
            job_posting_id?: string;
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateJobPostingRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): UpdateJobPostingRequest;
    }
    export class UpdateJobPostingResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): UpdateJobPostingResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateJobPostingResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): UpdateJobPostingResponse;
    }
    export class DeleteJobPostingRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_posting_id?: string;
        });
        get job_posting_id(): string;
        set job_posting_id(value: string);
        static fromObject(data: {
            job_posting_id?: string;
        }): DeleteJobPostingRequest;
        toObject(): {
            job_posting_id?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteJobPostingRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): DeleteJobPostingRequest;
    }
    export class DeleteJobPostingResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): DeleteJobPostingResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteJobPostingResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): DeleteJobPostingResponse;
    }
    export class Salary extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            min_range?: number;
            max_range?: number;
        });
        get min_range(): number;
        set min_range(value: number);
        get max_range(): number;
        set max_range(value: number);
        static fromObject(data: {
            min_range?: number;
            max_range?: number;
        }): Salary;
        toObject(): {
            min_range?: number;
            max_range?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Salary;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Salary;
    }
    export class JobPostingQuery extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            regexp_industry?: string;
            regexp_company_name?: string;
            regexp_location?: string;
            regexp_title?: string;
            eval_min_base_salary?: number;
            eval_max_base_salary?: number;
            eval_min_bonus_salary?: number;
            eval_max_bonus_salary?: number;
            regexp_qualifications?: string[];
        });
        get regexp_industry(): string;
        set regexp_industry(value: string);
        get regexp_company_name(): string;
        set regexp_company_name(value: string);
        get regexp_location(): string;
        set regexp_location(value: string);
        get regexp_title(): string;
        set regexp_title(value: string);
        get eval_min_base_salary(): number;
        set eval_min_base_salary(value: number);
        get eval_max_base_salary(): number;
        set eval_max_base_salary(value: number);
        get eval_min_bonus_salary(): number;
        set eval_min_bonus_salary(value: number);
        get eval_max_bonus_salary(): number;
        set eval_max_bonus_salary(value: number);
        get regexp_qualifications(): string[];
        set regexp_qualifications(value: string[]);
        static fromObject(data: {
            regexp_industry?: string;
            regexp_company_name?: string;
            regexp_location?: string;
            regexp_title?: string;
            eval_min_base_salary?: number;
            eval_max_base_salary?: number;
            eval_min_bonus_salary?: number;
            eval_max_bonus_salary?: number;
            regexp_qualifications?: string[];
        }): JobPostingQuery;
        toObject(): {
            regexp_industry?: string;
            regexp_company_name?: string;
            regexp_location?: string;
            regexp_title?: string;
            eval_min_base_salary?: number;
            eval_max_base_salary?: number;
            eval_min_bonus_salary?: number;
            eval_max_bonus_salary?: number;
            regexp_qualifications?: string[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): JobPostingQuery;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): JobPostingQuery;
    }
    export class JobPostingQueryResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            job_posting_id?: string;
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: Salary;
            bonus_salary?: Salary;
            qualifications?: string[];
        });
        get job_posting_id(): string;
        set job_posting_id(value: string);
        get industry(): string;
        set industry(value: string);
        get company_name(): string;
        set company_name(value: string);
        get location(): string;
        set location(value: string);
        get title(): string;
        set title(value: string);
        get base_salary(): Salary;
        set base_salary(value: Salary);
        get has_base_salary(): boolean;
        get bonus_salary(): Salary;
        set bonus_salary(value: Salary);
        get has_bonus_salary(): boolean;
        get qualifications(): string[];
        set qualifications(value: string[]);
        static fromObject(data: {
            job_posting_id?: string;
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
        }): JobPostingQueryResponse;
        toObject(): {
            job_posting_id?: string;
            industry?: string;
            company_name?: string;
            location?: string;
            title?: string;
            base_salary?: ReturnType<typeof Salary.prototype.toObject>;
            bonus_salary?: ReturnType<typeof Salary.prototype.toObject>;
            qualifications?: string[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): JobPostingQueryResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): JobPostingQueryResponse;
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    export abstract class UnimplementedJobPostingServiceService {
        static definition: {
            CreateJobPosting: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: CreateJobPostingRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => CreateJobPostingRequest;
                responseSerialize: (message: CreateJobPostingResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => CreateJobPostingResponse;
            };
            ReadJobPosting: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: ReadJobPostingRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => ReadJobPostingRequest;
                responseSerialize: (message: ReadJobPostingResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => ReadJobPostingResponse;
            };
            ReadJobPostingByQuery: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: ReadJobPostingByQueryRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => ReadJobPostingByQueryRequest;
                responseSerialize: (message: ReadJobPostingByQueryResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => ReadJobPostingByQueryResponse;
            };
            UpdateJobPosting: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: UpdateJobPostingRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => UpdateJobPostingRequest;
                responseSerialize: (message: UpdateJobPostingResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => UpdateJobPostingResponse;
            };
            DeleteJobPosting: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: DeleteJobPostingRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => DeleteJobPostingRequest;
                responseSerialize: (message: DeleteJobPostingResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => DeleteJobPostingResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract CreateJobPosting(call: grpc_1.ServerUnaryCall<CreateJobPostingRequest, CreateJobPostingResponse>, callback: grpc_1.sendUnaryData<CreateJobPostingResponse>): void;
        abstract ReadJobPosting(call: grpc_1.ServerUnaryCall<ReadJobPostingRequest, ReadJobPostingResponse>, callback: grpc_1.sendUnaryData<ReadJobPostingResponse>): void;
        abstract ReadJobPostingByQuery(call: grpc_1.ServerUnaryCall<ReadJobPostingByQueryRequest, ReadJobPostingByQueryResponse>, callback: grpc_1.sendUnaryData<ReadJobPostingByQueryResponse>): void;
        abstract UpdateJobPosting(call: grpc_1.ServerUnaryCall<UpdateJobPostingRequest, UpdateJobPostingResponse>, callback: grpc_1.sendUnaryData<UpdateJobPostingResponse>): void;
        abstract DeleteJobPosting(call: grpc_1.ServerUnaryCall<DeleteJobPostingRequest, DeleteJobPostingResponse>, callback: grpc_1.sendUnaryData<DeleteJobPostingResponse>): void;
    }
    const JobPostingServiceClient_base: grpc_1.ServiceClientConstructor;
    export class JobPostingServiceClient extends JobPostingServiceClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        CreateJobPosting: GrpcUnaryServiceInterface<CreateJobPostingRequest, CreateJobPostingResponse>;
        ReadJobPosting: GrpcUnaryServiceInterface<ReadJobPostingRequest, ReadJobPostingResponse>;
        ReadJobPostingByQuery: GrpcUnaryServiceInterface<ReadJobPostingByQueryRequest, ReadJobPostingByQueryResponse>;
        UpdateJobPosting: GrpcUnaryServiceInterface<UpdateJobPostingRequest, UpdateJobPostingResponse>;
        DeleteJobPosting: GrpcUnaryServiceInterface<DeleteJobPostingRequest, DeleteJobPostingResponse>;
    }
    export {};
}
